
# Stałe predefiniowane używane podczas pobierania symboli
PREDEFINED: {
    "MSD_HASH_MBS_FUNCTIONS": null,
    "MSD_HASH_WCS_FUNCTIONS": null,

    "MSD_HASH_MURMUR": null,
    "MSD_HASH_JOAAT":  null,
    "MSD_HASH_FNV":    null,
    "MSD_HASH_SDBM":   null,
    "MSD_HASH_DJB":    null,
    "MSD_HASH_XXHASH": null,

    "IGRET": null,
    "IGVAR": null,

    "MSD_SYSTEM_LINUX":  null,
    "MSD_COMPILER_GNUC": null,

    "INLINE": inline,

    "TEST_PREDEFINED(_x,_y)": ms_{:_x}_get_{:_y}
}

# Lista zmiennych dostępnych podczas działania parsera
VARIABLES: {}

# Nazwa punktu wejściowego
START: ENTRY

# Kroki według których parsowany będzie plik
STEPS: {

    # Punkt wejściowy
    ENTRY: [
        [loop,
            PREPARE_TEXT
        ],
        [rewind,
            0
        ]
    ],

    # Przygotowywanie tekstu pod parsowanie
    PREPARE_TEXT: [
        [seek, {
                '/': false
                '"': false
                "'": false
            },
            false
        ],
        [char, {
                "/": COMMENT,
                '"': SKIP_CONTENT_DOUBLE,
                "'": SKIP_CONTENT_SINGLE
            },
            false
        ]
    ],

    # Usuwa ciągi znaków zapisane w apostrofie
    SKIP_CONTENT_DOUBLE: [
        [escape_replace_until,
            '"',
            "\\",
            ' '
        ]
    ],
    
    # Usuwa ciągi znaków zapisane w apostrofie
    SKIP_CONTENT_SINGLE: [
        [escape_replace_until,
            "'",
            "\\",
            ' '
        ]
    ],

    # Wykrywa typ komentarza
    COMMENT: [
        [char, {
                '/': COMMENT_LINE_START,
                '*': COMMENT_BLOCK_START
            },
            false
        ]
    ],

    # Początek komentarza blokowego
    COMMENT_BLOCK_START: [
        [group,
            COMMENT_BLOCK
        ],
        [seek,
            -2, 
            false
        ],
        [replace,
            " ",
            false
        ],
        [replace,
            " ",
            false
        ],
        [execute,
            COMMENT_BLOCK
        ],
        [group,
            null
        ]
    ],

    # Komentarz blokowy
    COMMENT_BLOCK: [
        [replace_until, {
                "\n": false,
                "*":  false
            },
            ' ',
            false
        ],
        [next,
            '*',
            'COMMENT_BLOCK_END_PREPARE',
            false
        ],
        [replace,
            ' ',
            true
        ],
        [execute,
            COMMENT_BLOCK
        ]
    ],

    # Przygotowanie do zakończenia komentarza blokowego
    COMMENT_BLOCK_END_PREPARE: [
        [next,
            '/',
            'COMMENT_BLOCK_END',
            false
        ],
        ['seek',
            -1,
            false
        ],
        ['replace',
            ' ',
            true
        ],
        ['execute',
            'COMMENT_BLOCK'
        ]
    ],

    # Zakończenie komentarza blokowego
    COMMENT_BLOCK_END: [
        [seek,
            -2,
            false
        ],
        [replace,
            ' ',
            false
        ],
        [replace',
            ' ',
            false
        ]
    ],


}
